From d41489b93a5e4e65804b1f736a326cfc79f3c68d Mon Sep 17 00:00:00 2001
From: Pavol Juhas <pavol.juhas@gmail.com>
Date: Thu, 6 Apr 2017 18:56:41 -0400
Subject: TST: switch to automated TestCase discovery.

Avoid need to maintain a list of test modules.
Also add `pattern` argument to testsuite() for filtering test cases.
---
 src/diffpy/srfit/tests/__init__.py | 70 +++++++++++++++++++-------------------
 1 file changed, 35 insertions(+), 35 deletions(-)

diff --git a/src/diffpy/srfit/tests/__init__.py b/src/diffpy/srfit/tests/__init__.py
index f2a2ada..c9d2fbc 100644
--- a/src/diffpy/srfit/tests/__init__.py
+++ b/src/diffpy/srfit/tests/__init__.py
@@ -16,6 +16,8 @@
 """Unit tests for diffpy.srfit.
 """
 
+import unittest
+
 # create logger instance for the tests subpackage
 import logging
 
@@ -24,50 +26,48 @@ logger = logging.getLogger(__name__)
 del logging
 
 
-def testsuite():
-    '''Build a unit tests suite for the diffpy.srfit package.
+def testsuite(pattern=''):
+    '''Create a unit tests suite for diffpy.srfit package.
+
+    Parameters
+    ----------
+    pattern : str, optional
+        Regular expression pattern for selecting test cases.
+        Select all tests when empty.
 
-    Return a unittest.TestSuite object.
+    Returns
+    -------
+    suite : `unittest.TestSuite`
+        The TestSuite object containing the matching tests.
     '''
-    import unittest
-    modulenames = '''
-        diffpy.srfit.tests.testbuilder
-        diffpy.srfit.tests.testcharacteristicfunctions
-        diffpy.srfit.tests.testconstraint
-        diffpy.srfit.tests.testcontribution
-        diffpy.srfit.tests.testdiffpyparset
-        diffpy.srfit.tests.testequation
-        diffpy.srfit.tests.testfitrecipe
-        diffpy.srfit.tests.testfitresults
-        diffpy.srfit.tests.testliterals
-        diffpy.srfit.tests.testobjcrystparset
-        diffpy.srfit.tests.testparameter
-        diffpy.srfit.tests.testparameterset
-        diffpy.srfit.tests.testpdf
-        diffpy.srfit.tests.testprofile
-        diffpy.srfit.tests.testprofilegenerator
-        diffpy.srfit.tests.testrecipeorganizer
-        diffpy.srfit.tests.testrestraint
-        diffpy.srfit.tests.testsas
-        diffpy.srfit.tests.testsgconstraints
-        diffpy.srfit.tests.testtagmanager
-        diffpy.srfit.tests.testvisitors
-        diffpy.srfit.tests.testweakrefcallable
-    '''.split()
-    suite = unittest.TestSuite()
+    import re
+    from itertools import chain
+    from pkg_resources import resource_filename
     loader = unittest.defaultTestLoader
-    mobj = None
-    for mname in modulenames:
-        exec ('import %s as mobj' % mname)
-        suite.addTests(loader.loadTestsFromModule(mobj))
+    thisdir = resource_filename(__name__, '')
+    suite_all = loader.discover(thisdir)
+    # shortcut when pattern is not specified
+    if not pattern:
+        return suite_all
+    # here we need to filter the suite by pattern
+    suite = unittest.TestSuite()
+    rx = re.compile(pattern)
+    tcases = chain.from_iterable(chain.from_iterable(suite_all))
+    for tc in tcases:
+        tcwords = tc.id().rsplit('.', 2)
+        shortname = '.'.join(tcwords[-2:])
+        if rx.search(shortname):
+            suite.addTest(tc)
     return suite
 
 
 def test():
     '''Execute all unit tests for the diffpy.srfit package.
-    Return a unittest TestResult object.
+
+    Returns
+    -------
+    result : `unittest.TestResult`
     '''
-    import unittest
     suite = testsuite()
     runner = unittest.TextTestRunner()
     result = runner.run(suite)
-- 
2.12.2

